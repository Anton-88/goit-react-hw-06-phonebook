{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","redux/phonebook/actions.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/phonebook/reducers.js","redux/store.js","index.js"],"names":["module","exports","connect","dispatch","onAddContact","contact","type","payload","addContact","contactNameID","uuidv4","contactNumberID","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","id","console","log","className","styles","contact_form_container","contact_form_item","contact_form_label","htmlFor","placeholder","onChange","pattern","title","required","contact_add_btn","disabled","length","Filter","onFilterChange","filter_container","onRemoveContact","filteredContacts","onListChange","contact_list","map","contact_list_item","contact_list_button","onClick","removeBoth","App","JSON","parse","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","window","setItem","stringify","filteredItems","useMemo","tempContacts","toLowerCase","includes","newContact","alert","prev","target","itemId","item","initState","contactsReducer","combineReducers","state","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70f2dd3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__1nc0g\",\"contact_list_item\":\"ContactList_contact_list_item__2Vfvf\",\"contact_list_button\":\"ContactList_contact_list_button__31cxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_container\":\"Filter_filter_container__35KlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form_container\":\"ContactForm_contact_form_container__n5mJP\",\"contact_form_item\":\"ContactForm_contact_form_item__1271N\",\"contact_form_label\":\"ContactForm_contact_form_label__XlzLV\",\"contact_add_btn\":\"ContactForm_contact_add_btn__2U-pf\"};","import styles from \"./ContactForm.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/phonebook/actions\";\n\nfunction ContactForm({ addContact, onAddContact }) {\n  const contactNameID = uuidv4();\n  const contactNumberID = uuidv4();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    addContact(contact);\n    console.log(`this`, this);\n    onAddContact(contact);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles.contact_form_container}>\n        <div className={styles.contact_form_item}>\n          <label className={styles.contact_form_label} htmlFor={contactNameID}>\n            Contact name:\n          </label>\n          <input\n            id={contactNameID}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter contact name ...\"\n            onChange={handleChange}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </div>\n        <div className={styles.contact_form_item}>\n          <label\n            className={styles.contact_form_label}\n            htmlFor={contactNumberID}\n          >\n            Contact number:\n          </label>\n          <input\n            id={contactNumberID}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter contact number ...\"\n            onChange={handleChange}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className={styles.contact_add_btn}\n          disabled={!name || number.length < 5}\n        >\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddContact: (contact) => dispatch(addContact(contact)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","export const addContact = (contact) => ({\n  type: \"contact/add\",\n  payload: contact,\n});\n\nexport const removeContact = (id) => ({\n  type: \"contact/remove\",\n  payload: { id },\n});\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nexport function Filter({ value, onFilterChange }) {\n  return (\n    <>\n      <div className={styles.filter_container}>\n        <p>Find contact by name</p>\n        <input type=\"text\" value={value} onChange={onFilterChange} />\n      </div>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n","import { PropTypes } from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport { removeContact } from \"../../redux/phonebook/actions\";\n\nfunction ContactList({ filteredContacts, onListChange, onRemoveContact }) {\n  function removeBoth(id) {\n    onListChange(id);\n    onRemoveContact(id);\n  }\n  return (\n    <ul className={styles.contact_list}>\n      {filteredContacts.map(({ name, number, id }) => (\n        <li className={styles.contact_list_item} key={uuidv4()}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.contact_list_button}\n            type=\"button\"\n            onClick={() => removeBoth(id)}\n          >\n            Delete number\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveContact: (contact) => dispatch(removeContact(contact)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  state: PropTypes.arrayOf(PropTypes.any).isRequired,\n  onListChange: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport { LSManager } from \"./hooks/localStorageManagement\";\nimport styles from \"./App.css\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(localStorage.getItem(\"contacts\")) ?? [\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      ]\n    );\n  });\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (newContact) => {\n    if (contacts.map((contact) => contact.name).includes(newContact.name)) {\n      alert(`${newContact.name} is in your contacts list already`);\n    } else {\n      setContacts((prev) => [...prev, newContact]);\n    }\n  };\n\n  const filterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const filteredItems = useMemo(() => {\n    const tempContacts = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(tempContacts)\n    );\n  }, [filter, contacts]);\n\n  const deleteItem = (itemId) => {\n    setContacts((prev) => prev.filter((item) => item.id !== itemId));\n  };\n\n  return (\n    <>\n      <h1>PhoneBook</h1>\n      <ContactForm addContact={addContact} contacts={contacts} />\n      <h2>Contacts</h2>\n      <div>\n        <Filter value={filter} onFilterChange={filterChange} />\n        <ContactList\n          filteredContacts={filteredItems}\n          onListChange={deleteItem}\n        />\n      </div>\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\n\nconst initState = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst contactsList = (state = initState, action) => {\n  switch (action.type) {\n    case \"contact/add\":\n      // console.log(`action`, action)\n      return [...state, action.payload];\n    case \"contact/remove\":\n      return state.filter((contact) => contact.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n\nconst contactsFilter = (state = \"\", action) => {\n  return state;\n};\n\nexport const contactsReducer = combineReducers({\n  contacts: contactsList,\n  filter: contactsFilter,\n});\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { contactsReducer } from \"./phonebook/reducers\";\n\nexport const store = createStore(contactsReducer, composeWithDevTools());\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}